syntax = "proto3";

package tzero.v1.common;

import "tzero/v1/common/common.proto";
import "buf/validate/validate.proto";

enum PaymentMethodType {
  PAYMENT_METHOD_TYPE_UNSPECIFIED = 0;
  PAYMENT_METHOD_TYPE_SEPA = 10;
  PAYMENT_METHOD_TYPE_SWIFT = 20;
  PAYMENT_METHOD_TYPE_CARD = 30; // only pay in
  PAYMENT_METHOD_TYPE_STABLECOIN = 40; // only pay out
  PAYMENT_METHOD_TYPE_ACH = 50;
  PAYMENT_METHOD_TYPE_WIRE = 60;
}

message PaymentMethod {
  oneof details {
    option (buf.validate.oneof).required = true;
    SepaPaymentDetails sepa = 10;
    SwiftPaymentDetails swift = 30;
    StablecoinPaymentDetails stablecoin = 40;
    AchPaymentDetails ach = 50;
    WirePaymentDetails wire = 60;
  } ;
}

message SepaPaymentDetails {
  // IBAN should be 15-34 characters, alphanumeric
  string iban = 20 [(buf.validate.field).string = {
    min_len: 15,
    max_len: 34,
    pattern: "^[A-Z]{2}[0-9]{2}[A-Z0-9]+$"
  }];
  // Beneficiary name should be 1-70 characters (SEPA standard)
  string beneficiary_name = 30 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 70
  }];
  // Payment reference up to 140 characters (SEPA standard)
  string payment_reference = 40 [(buf.validate.field).string = {
    max_len: 140
  }];
}

message SwiftPaymentDetails {

}

message StablecoinPaymentDetails {
  // Blockchain must be specified and not UNSPECIFIED
  tzero.v1.common.Blockchain blockchain = 10 [(buf.validate.field).enum = {
    not_in: [0]
  }];
  // Stablecoin must be specified and not UNSPECIFIED
  tzero.v1.common.Stablecoin stablecoin = 20 [(buf.validate.field).enum = {
    not_in: [0]
  }];
  // Blockchain address should be a valid hex address (20-64 chars for most blockchains)
  string address = 30 [(buf.validate.field).string = {
    min_len: 20,
    max_len: 64,
    pattern: "^(0x)?[a-fA-F0-9]+$"
  }];
}

message AchPaymentDetails {
  // US bank routing number (9 digits)
  string routing_number = 10 [(buf.validate.field).string = {
    min_len: 9,
    max_len: 9,
    pattern: "^[0-9]{9}$"
  }];
  // US bank account number (up to 17 digits)
  string account_number = 20 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 17,
    pattern: "^[0-9]+$"
  }];
  // Account holder name (1-70 characters)
  string account_holder_name = 30 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 70
  }];
  // Account type (checking or savings)
  AchAccountType account_type = 40 [(buf.validate.field).enum = {
    not_in: [0]
  }];

  enum AchAccountType {
    ACH_ACCOUNT_TYPE_UNSPECIFIED = 0;
    ACH_ACCOUNT_TYPE_CHECKING = 10;
    ACH_ACCOUNT_TYPE_SAVINGS = 20;
  }
}

message WirePaymentDetails {
  // Bank name (1-70 characters)
  string bank_name = 10 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 70
  }];
  // Bank address (1-140 characters)
  string bank_address = 20 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 140
  }];
  // SWIFT/BIC code (8 or 11 characters)
  string swift_code = 30 [(buf.validate.field).string = {
    min_len: 8,
    max_len: 11,
    pattern: "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$"
  }];
  // Account number (up to 34 characters for international compatibility)
  string account_number = 40 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 34
  }];
  // Beneficiary name (1-70 characters)
  string beneficiary_name = 50 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 70
  }];
  // Beneficiary address (1-140 characters)
  string beneficiary_address = 60 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 140
  }];
  // Wire reference/purpose (up to 140 characters)
  string wire_reference = 70 [(buf.validate.field).string = {
    max_len: 140
  }];
}